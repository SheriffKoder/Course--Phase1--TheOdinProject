/*
by default everything is responsive
set values, certain issues are created

lesson1: 
% of the parent 
body can be the view port
so all depend on each other body>parent>child

lesson2:
try to avoid heights, let it be responsive 
use padding better and better with em, 
relative to root by default which is 16px by default



*/


* {
    box-sizing: border-box;
}

.body {
    margin: 0;
}


.parent {
    
    margin: 0 auto;
    background: #23424A;
    padding: 50px;
    padding-bottom: 5em;
    padding-top: 5em;

    width: 80%;
    max-width: 700px;
}


.child {

    
    background: #38CFD9;
    padding: 10px;
    padding-top: 1em;
    padding-bottom: 7em;


    width:80%;

    margin: 0 auto;

}

/* 
Day2: 
em's in fonts multiply with nesting
so better use rem which is more manageable is 16px by default
can put in html { font-size: 62.5% } to adjust the default rem to 10px instead of 16px

but 

em's on anything than font size, reference to the 
padding, link padding, margins
font size of that element in this case the used rem
to be consisted with the size of the font (if wanted)

*/


/*
Day:3
avoid reading across big screen sizes
by limiting the max width of the container

Day4:
vh, vw, vmin, vmax
different values for different screen sizes

*/



/*////////////////////////////////////////////////////////////////////*/
/*////////////////////////////////////////////////////////////////////*/
/* Day 8 */
/*

/* Day 9 */
/*

can use <section> to group content in html instead of div

.accent-text {
    //reusable style

not use height on containers, just padding
width % and max-width,


optimize html by combining classes into one element if possible
separating the responsibilities between two classes for better reuse and flexibility

flex lets the elements take equal heights
align items flex start lets ignore that and not stretch


*/