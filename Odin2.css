/*
* (universal selector)
Div (all type selector)
.Class (all class selector)

#Id unlike classes
should use IDs sparingly, 
an element can only have one id
cannot be repeated on a single page


hyphen _


.read, .unread {
    //group selector, common declarations between the two elements
}

.read.subread {
.read#preview {
        //chain selector > an element that is 'read' and 'subread' in the same time
        //any selector, name with type but not chain types together
}


. ancestor .child {
        //descendant selector, when element is a child and in this ancestor
}

color: transparent;

quotes on the family name, no quouts on the generic names
"Times New Roman" sans-serif

setting height and width for an image (even if not needed)
will cause the image to have a space reserved until it loads 
and not cause float loading problems


CSS Cascade (Priority) for the same style-property only, else is applied
1.HTML inline                                           score 1000
1.1 html header style
2.Layer                                                 score 
3.Direct specificity/Last specified
4.ID                                                   score 100
5.Class/attribute(required, href=.. )/pseudo-selectors(::hover etc) score 10
6.Type                                                  score 1
* + > ~ _ || have no impact over specificity score      score 0

.para:first-of-type << highest hit 4 4 (wins) -> color:white
p.para << hit 4 5  -> color:red

#para -> color:red (now color:red has been enhanced by a hit so wins with this)


if same type, then the more count the more priority
.class .class wins over .class
#id .class wins over .class .class
#id .class .class wins over #id .class


Website style over browser style


@layers one, two; /* defining our layers */

/*

@layer one {
    h1 {

    }
}

@layer two {
    h1 {

    }

}

/* Adding fonts  */
/*
@font-face {
    font-family : fontname; 1
    src: url (  ); 2 
}

html link 
css font-family: 'fontname';

css @import url('');
css font-family: 'fontname';


/* to open the ruler */
/*
Inspect in Chrome
Press Control+Shift+P or Command+Shift+P (Mac) to open the Command menu, 
type Show rulers on hover, and press Enter.

Command+F in elements to find
Edit HTML , CMD+Enter to finish
Right click force state hover etc,
Drag element
H > hide, delete > delete

Inspect > three dots on top-right > More tools > CSS overview




*/



.button_blue {

    color: white;
    background-color: blue;

}


.thumb_list {
    list-style-type: "\1F44D"; /*thumb icon as the list marker */
}


/* a way of adding an image to the list item 
and by padding make it seem like a marker */
.image_li_marker {
    margin-left: -12px;
    background: url('images/arrow.png') 0 50% no-repeat;
    list-style-type: none;
    padding-left: 12px;
}

.inside_li_marker {
    /*list-style-position: inside; */
    /*placed with the text itself */
    list-style: circle inside;
}

/* horizontal list */
li {
    /*
    display: inline-block; /* items on same line and markers removed */
    
    float: left;
    margin-left: 30px;
    /* items on same line and markers kept */

}

/*div containing 2 elements one of them get overflow because of flow property
clearfix */
.div_clearfix::after {
    content: "";
    clear: both;
    display: table;
  }
  
  .div_clearfix2 {
    overflow: auto;
  }
  
  
/* lets define a counter/marker style that is not in the predefined set of styles */ 
/* more reading on application */
@counter-style thumbsUp {
    system : cyclic; /* cyclic, numeric, alphabetic, symbolic, additive, or fixed. */
    symbols: "\1F44D"; /* strings, images, or custom identifiers, can have multi symbols and will be placed in order */
    suffix: " "; /*content space,),img ... that will be appended to the marker representation. also there is prefix*/
    /*fallback: range: start end(infinite); speak-as */
}
/*https://www.w3.org/TR/predefined-counter-styles/, https://r12a.github.io/app-counters/*/

li {
    list-style: thumbsUp;
}

p {
    font-size: 50px;
}


/*/////////////////////////////////////////////////////*/


.Para:first-of-type {
    color: orange;
    } 
p#Para {
    color: red;   
}

#Para {
    color: red;   
}

